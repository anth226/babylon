syntax = "proto3";
package babylon.btclightclient.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "babylon/btclightclient/params.proto";
import "babylon/btclightclient/btclightclient.proto";

option go_package = "github.com/babylonchain/babylon/x/btclightclient/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/babylon/btclightclient/v1/params";
  }

  // Hashes retrieves the hashes maintained by the module.
  rpc Hashes(QueryHashesRequest) returns (QueryHashesResponse) {
    option (google.api.http).get = "/babylon/btclightclient/v1/hashes";
  }

  // Contains checks whether a hash is maintained by the module.
  rpc Contains(QueryContainsRequest) returns (QueryContainsResponse) {
    option (google.api.http).get = "/babylon/btclightclient/v1/contains";
  }

  // MainChain returns the canonical chain
  rpc MainChain(QueryMainChainRequest) returns (QueryMainChainResponse) {
    option (google.api.http).get = "/babylon/btclightclient/v1/mainchain";
  }

  // BestHeader return best header on canonical chain
  rpc Tip(QueryTipRequest) returns (QueryTipResponse) {
    option (google.api.http).get = "/babylon/btclightclient/v1/tip";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}
// QueryHashesRequest is request type for the Query/Hashes RPC method.
// It involves retrieving all hashes that are maintained by the module.
message QueryHashesRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryHashesResponse is response type for the Query/Hashes RPC method.
message QueryHashesResponse {
  repeated bytes hashes = 1 [
    (gogoproto.customtype) = "github.com/babylonchain/babylon/types.BTCHeaderHashBytes"
  ];

  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
// QueryContainsRequest is request type for the Query/Contains RPC method.
// It involves checking whether a hash is maintained by the module.
message QueryContainsRequest {
  bytes hash = 1 [
    (gogoproto.customtype) = "github.com/babylonchain/babylon/types.BTCHeaderHashBytes"
  ];
}

// QueryContainsResponse is response type for the Query/Contains RPC method.
message QueryContainsResponse {
  bool contains = 1;
}

// QueryMainChainRequest is request type for the Query/MainChain RPC method.
// It involves retrieving the canonical chain maintained by the module.
message QueryMainChainRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryMainChainResponse is response type for the Query/MainChain RPC method.
message QueryMainChainResponse {
  repeated BTCHeaderInfo headers = 1;

  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryTipRequest {
}

message QueryTipResponse {
  BTCHeaderInfo header = 1;
}
